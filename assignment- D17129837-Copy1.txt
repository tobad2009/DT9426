{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 34,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "volume of sphere is: 33510.32\n"
     ]
    }
   ],
   "source": [
    " import math\n",
    "r = 20\n",
    "volume = 4/3 * math.pi * math.pow( r, 3 )\n",
    "print ( \"volume of sphere is: {0:.2f}\".format( volume ) )"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 37,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "please enter radius: 4\n",
      "volume of cylinder is 268.08\n"
     ]
    }
   ],
   "source": [
    " import math\n",
    "radius = float( input( \"please enter radius: \") )\n",
    "volume = 4/3 * math.pi * math.pow( radius, 3 ) \n",
    "print( \"volume of cylinder is {0:.2f}\".format( volume ) )"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 38,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "please enter radius: 7\n",
      "please enter height: 5\n",
      "volume of cylinder is 769.69\n"
     ]
    }
   ],
   "source": [
    "import math\n",
    "radius = float( input( \"please enter radius: \") )\n",
    "height = float( input( \"please enter height: \") )\n",
    "volume = math.pi * math.pow( radius, 2 ) *height\n",
    "print( \"volume of cylinder is {0:.2f}\".format( volume ) )"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 39,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "please enter radius: 6\n",
      "please enter height: 8\n",
      "volume of cone is 301.59\n"
     ]
    }
   ],
   "source": [
    "import math\n",
    "radius = float( input( \"please enter radius: \") )\n",
    "height = float( input( \"please enter height: \") )\n",
    "volume = 1/3 * math.pi * math.pow( radius, 2 ) *height\n",
    "print( \"volume of cone is {0:.2f}\".format( volume ) )\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 40,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "please enter the number of miles driven: 7\n",
      "please enter the gallons of gas used: 8\n",
      "the car's miles-per-gallon is 0.88\n"
     ]
    }
   ],
   "source": [
    "milesdriven = float( input( \"please enter the number of miles driven: \") )\n",
    "gallonsofgasused = float( input( \"please enter the gallons of gas used: \" ) )\n",
    "milespergallon = milesdriven / gallonsofgasused\n",
    "print( \"the car's miles-per-gallon is {0:.2f}\".format( milespergallon ) )\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 41,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "please enter a temperature in celsius: 6\n",
      "6.0 degrees in fahrenheit is 42.8\n"
     ]
    }
   ],
   "source": [
    "celsiustemperature = float( input( \"please enter a temperature in celsius: \") )\n",
    "fahrenheittemperature = ( ( 9 / 5 ) * celsiustemperature ) + 32\n",
    "print(  str( celsiustemperature ) + \" degrees in fahrenheit is {0:.1f}\".format( fahrenheittemperature ) ) \n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 31,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "please enter a temperature in fahrenheit: 80\n",
      "80.0 degrees in celsius is 26.7\n"
     ]
    }
   ],
   "source": [
    "fahrenheittemperature = float( input( \"please enter a temperature in fahrenheit: \") )\n",
    "celsiustemperature = ( ( fahrenheittemperature - 32 ) * ( 5 / 9 ) )\n",
    "print(  str( fahrenheittemperature ) + \" degrees in celsius is {0:.1f}\".format( celsiustemperature ) ) \n"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.0"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
